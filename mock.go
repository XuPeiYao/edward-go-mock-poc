// Code generated by MockGen. DO NOT EDIT.
// Source: repos/iServiceProvider.go
//
// Generated by this command:
//
//	mockgen -source repos/iServiceProvider.go -destination repos/mock.go
//

// Package mock_repos is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIServiceProvider is a mock of IServiceProvider interface.
type MockIServiceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIServiceProviderMockRecorder
}

// MockIServiceProviderMockRecorder is the mock recorder for MockIServiceProvider.
type MockIServiceProviderMockRecorder struct {
	mock *MockIServiceProvider
}

// NewMockIServiceProvider creates a new mock instance.
func NewMockIServiceProvider(ctrl *gomock.Controller) *MockIServiceProvider {
	mock := &MockIServiceProvider{ctrl: ctrl}
	mock.recorder = &MockIServiceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIServiceProvider) EXPECT() *MockIServiceProviderMockRecorder {
	return m.recorder
}

// GetService mocks base method.
func (m *MockIServiceProvider) GetService() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetService")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetService indicates an expected call of GetService.
func (mr *MockIServiceProviderMockRecorder) GetService() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetService", reflect.TypeOf((*MockIServiceProvider)(nil).GetService))
}
